/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import controller.Manager;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelclasses.Customer;
import modelclasses.Order;
import modelclasses.OrderItem;
import modelclasses.Product;

/**
 *
 * @author AA
 */
public class AddOrderCustomer extends javax.swing.JFrame {

    /**
     * Creates new form AddCustomer
     */
    
    Manager manager;
    
    ArrayList<Product> products;
    
    ArrayList<OrderItem> orderItems;
    public AddOrderCustomer(Manager manager) {
        initComponents();
         this.setLocationRelativeTo(null); 
         
         this.manager = manager;
         products = manager.getProducts();
         
         orderItems = new ArrayList();
        
         customerList.addItem(Values.cid);
         customerList.setSelectedItem(Values.cid);
        
         
         
         if(manager.getOrders().size()==0){
              id.setText("o1");
         }
         else{
             
        
         
         
         
         String previousID = ""+manager.getOrders().get(manager.getOrders().size()-1).getOid();
         
         String[] parts = previousID.split("o");
         
         
         id.setText("o"+(Integer.parseInt(parts[1])+1));
         updateTables();
         
       
         
          }
    }
    
    void updateTables(){
        
          
         DefaultTableModel productTM = new DefaultTableModel(new Object[]
        {
            "Product ID", "Product Name", "Price", "Quantity"
        }, 0);
         
         
            for(modelclasses.Product product : products){
                 if(product.getQuantity()>0)
            productTM.addRow(new Object[]{product.getPid(), product.getPname(), product.getPrice(), product.getQuantity()});
        }
        
        availableItems.setModel(productTM);
        
        
         DefaultTableModel orderItemsTM = new DefaultTableModel(new Object[]
        {
            "Product ID","Quantity","Cost"
        }, 0);
         
         
         for(OrderItem oi : orderItems){
             orderItemsTM.addRow(new Object[]{oi.getPid(),oi.getQuantity(),(oi.getQuantity()*getProductPrice(oi.getPid()))});
         }
         
         selectedItems.setModel(orderItemsTM);
    
        
    }
    
    
        
    public String getProductName(String pid){
        
        for(Product p : products){
            if(p.getPid().equals(pid)){
                return p.getPname();
            }
        }
        
        return null;
    }
    
    
    public double getProductPrice(String pid){
        
        for(Product p : products){
            if(p.getPid().equals(pid)){
                return p.getPrice();
            }
        }
        
        return 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        selectedItems = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        availableItems = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        customerList = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(144, 60, 123));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Add");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(278, 278, 278)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        id.setEditable(false);

        jLabel2.setText("Order ID: ");

        jLabel3.setText("Customer ID:");

        jButton1.setBackground(new java.awt.Color(144, 60, 123));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        selectedItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Quantity", "Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(selectedItems);

        availableItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product  Name", "Price", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(availableItems);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Available Items");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Selected Items");

        jButton2.setBackground(new java.awt.Color(144, 60, 123));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Select Item");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(175, 175, 175)
                                .addComponent(jLabel2)
                                .addGap(33, 33, 33)
                                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(84, 84, 84)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(customerList, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(270, 270, 270)
                                .addComponent(jButton2)
                                .addGap(64, 64, 64)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(135, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(32, 32, 32))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel4))
                                    .addGap(352, 352, 352)))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(customerList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    String cid;
       
              cid = customerList.getSelectedItem().toString();
              
        
        String oid = id.getText();
        
        
        Order newOrder = new Order(oid, cid);
        newOrder.setOrderItems(orderItems);
        
        manager.getOrders().add(newOrder);
        
        JOptionPane.showMessageDialog(null, "Order Placed!");
        
         this.setVisible(false);
        
        try {
            new CustomerDashboard(manager).setVisible(true);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AddCustomer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(AddCustomer.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
       
    
    
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
         // TODO add your handling code here:
           int row = availableItems.getSelectedRow();
           
            if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row first");
        }
        else{
            String productID;
           
                productID = (String) availableItems.getValueAt(row, 0);
            
              Product temp = null;
              
           
              int index = 0;
              for(Product p : products){
                  if(p.getPid().equals(productID)){
                      temp = p;
                      
                      break;
                  }
                  
                  index++;
              }

             int q ; 
             
             
              String m;
              
             
              
              do{
                  
                   m = JOptionPane.showInputDialog("Enter Quantity?");
                    q = Integer.parseInt(m);
                    
                    if((q>temp.getQuantity())){
                         JOptionPane.showMessageDialog(null, "Please select quantity that is available!");
                    }
              } while((q>temp.getQuantity()));
              boolean isAlreadyThere = false;
             
              for(OrderItem oi : orderItems){
                  if(oi.getPid().equals(temp.getPid())){
                   oi.setQuantity(oi.getQuantity()+q);
                    products.get(index).setQuantity(products.get(index).getQuantity()-q);
                   isAlreadyThere = true;
                   break;
                  }
                  
                 
              }
              
              if(!isAlreadyThere){
                   orderItems.add(new OrderItem(temp.getPid(), q));
              
              products.get(index).setQuantity(products.get(index).getQuantity()-q);
              }
             
              
              updateTables();
              
              
            
            }

        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable availableItems;
    private javax.swing.JComboBox<String> customerList;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable selectedItems;
    // End of variables declaration//GEN-END:variables
}
